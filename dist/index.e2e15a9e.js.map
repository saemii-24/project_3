{"mappings":"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","sources":["<anon>","js/main/main.js"],"sourcesContent":["/*Cover Bg 사이즈 구하기*/ /*background-size:cover로 되어있을 때의 이미지 사이즈를 구한다.*/ function coverBgSize(el) {\n    //html 요소 사이즈를 가져온다.\n    // console.log(el);\n    const elWidth = el.offsetWidth;\n    const elHeight = el.offsetHeight;\n    // console.log(elWidth);\n    //해당 요소에 포함 된 background img url값만 가져온다\n    const elBgImg = getComputedStyle(el).getPropertyValue(\"background-image\").replace('url(\"', \"\").replace('\")', \"\");\n    // console.log(elBgImg);\n    //img url의 실제 사이즈를 가져온다.\n    const elBg = new Image();\n    elBg.src = elBgImg;\n    const elBgWidth = elBg.width;\n    const elBgHeight = elBg.height;\n    ///컨테이너와 이미지 사이즈를 이용해 기준을 설정\n    let stand = elWidth / elBgWidth;\n    if (elWidth / elBgWidth > elHeight / elBgHeight) stand = elWidth / elBgWidth;\n    else stand = elHeight / elBgHeight;\n    let nowWidth = elBgWidth * stand;\n    let nowHeight = elBgHeight * stand;\n    return {\n        \"nowWidth\": nowWidth,\n        \"nowHeight\": nowHeight\n    };\n}\n/*호주 즐길거리 hover 애니메이션*/ //창 사이즈 변경될때마다 실행\nwindow.addEventListener(\"resize\", function() {\n    hoverAnimation(recommendThings);\n    hoverAnimation(naturalThings);\n    hoverAnimation(cityThings);\n    hoverAnimation(foodTypes);\n});\nconst recommendThings = document.querySelectorAll(\".swiper-slide\");\nconst naturalThings = document.querySelectorAll(\".natural__box--picture\");\nconst cityThings = document.querySelectorAll(\".city__box\");\nconst foodTypes = document.querySelectorAll(\".food__type\");\n//실행되면 바로 실행\nwindow.onload = function() {\n    hoverAnimation(recommendThings);\n    hoverAnimation(naturalThings);\n    hoverAnimation(cityThings);\n    hoverAnimation(foodTypes);\n};\nfunction hoverAnimation(els) {\n    els.forEach((el)=>{\n        let size = coverBgSize(el);\n        let size_width = size[\"nowWidth\"];\n        let size_height = size[\"nowHeight\"];\n        el.style.backgroundSize = `${size_width}px ${size_height}px`;\n        el.addEventListener(\"mouseover\", function() {\n            el.style.backgroundSize = `${size_width * 1.05}px ${size_height * 1.05}px`;\n        });\n        el.addEventListener(\"mouseleave\", function() {\n            el.style.backgroundSize = `${size_width}px ${size_height}px`;\n        });\n    });\n}\n/*food*/ /*음식 미리보기 사진을 클릭하면 음식 설명이 바뀐다*/ /*현재 보여지고 있는 사진을 표시해준다.*/ function foodImgChange() {\n    const foodTypes = document.querySelectorAll(\".food__type\");\n    const foodContents = document.querySelectorAll(\".food__content\");\n    foodTypes.forEach(function(foodType, index) {\n        if (index === 0) foodType.classList.add(\"active\");\n        foodType.addEventListener(\"click\", function(event) {\n            foodTypes.forEach((foodType)=>{\n                foodType.classList.remove(\"active\");\n            });\n            event.target.classList.add(\"active\");\n            foodContents.forEach((foodContent)=>{\n                foodContent.classList.remove(\"active\");\n            });\n            foodContents[index].classList.add(\"active\");\n        });\n    });\n}\nfoodImgChange();\n/*district*/ /*지도를 클릭하면 그 주의 정보를 불러온다.*/ const districtMap = document.querySelectorAll(\".district__map--js\");\nconst districtInfo = document.querySelectorAll(\".district__info--js\");\nconst districtInfoContent = [\n    [\n        \"\\uD0DC\\uC988\\uBA54\\uC774\\uB2C8\\uC544\",\n        \"Tasmania\",\n        \"\\uD638\\uBC14\\uD2B8\",\n        \"2,296,411\\uBA85\",\n        \"90,758 km\\xb2\",\n        \"\tUTC+10 / \\uC11C\\uBA38\\uD0C0\\uC784 \\uC2DC\\uD589\"\n    ],\n    [\n        \"\\uC6E8\\uC2A4\\uD134 \\uC624\\uC2A4\\uD2B8\\uB808\\uC77C\\uB9AC\\uC544\",\n        \"Western Australia\",\n        \"\\uD37C\\uC2A4\",\n        \"2,296,411\\uBA85\",\n        \"2,645,615km\\xb2\",\n        \"UTC +8 / UTC+8:45\"\n    ],\n    [\n        \"\\uC0AC\\uC6B0\\uC2A4 \\uC624\\uC2A4\\uD2B8\\uB808\\uC77C\\uB9AC\\uC544\",\n        \"South Australia\",\n        \"\\uC560\\uB4E4\\uB808\\uC774\\uB4DC\",\n        \"1,514,337\\uBA85\",\n        \"1,043,514 km\\xb2\",\n        \"UTC+9:30 / \\uC11C\\uBA38\\uD0C0\\uC784 \\uC2DC\\uD589\"\n    ],\n    [\n        \"\\uD038\\uC990\\uB79C\\uB4DC\",\n        \"Queensland\",\n        \"\\uBE0C\\uB9AC\\uC988\\uBC88\",\n        \"4,907,600\\uBA85\",\n        \"1,852,642 km\\xb2\",\n        \"UTC+10\"\n    ],\n    [\n        \"\\uBE45\\uD1A0\\uB9AC\\uC544\",\n        \"Victoria\",\n        \"\\uBA5C\\uBC84\\uB978\",\n        \"5,713,000\\uBA85\",\n        \"237,629 km\\xb2\",\n        \"UTC+10 / \\uC11C\\uBA38\\uD0C0\\uC784 \\uC2DC\\uD589\"\n    ],\n    [\n        \"\\uB274\\uC0AC\\uC6B0\\uC2A4\\uC6E8\\uC77C\\uC2A4\",\n        \"New South Wales\",\n        \"\\uC2DC\\uB4DC\\uB2C8\",\n        \"6,889,100 \\uBA85\",\n        \"809,444 km\\xb2\",\n        \"UTC+10 / \\uC11C\\uBA38\\uD0C0\\uC784 \\uC2DC\\uD589\"\n    ]\n];\ndistrictMap.forEach((district, index)=>{\n    district.addEventListener(\"click\", (event)=>{\n        districtMap.forEach((district)=>{\n            district.classList.remove(\"active\");\n        });\n        event.target.classList.add(\"active\");\n        console.log(districtInfoContent[index]);\n        for(key in districtInfoContent[index])districtInfo[key].innerText = districtInfoContent[index][key];\n    });\n});\n/*weatehr__bg*/ /*비디오가 끝나도 자연스럽게 fadein으로 연결시킨다.*/ /*추가 확인 필요!*/ let weatherVideoFirst = document.getElementById(\"weather__bg--js--first\");\nlet weatherVideoSecond = document.getElementById(\"weather__bg--js--second\");\nvideoLoad();\nfunction videoLoad() {\n    weatherVideoFirst.onloadedmetadata = function() {\n        // weatherVideoSecond.pause();\n        let videoFirstPlay = true;\n        function videoIntervalPlay() {\n            if (videoFirstPlay) {\n                weatherVideoFirst.style.opacity = 1;\n                weatherVideoFirst.play();\n                setTimeout(()=>{\n                    weatherVideoSecond.pause();\n                    weatherVideoSecond.currentTime = 0;\n                }, 1000);\n                videoFirstPlay = false;\n            } else {\n                weatherVideoFirst.style.opacity = 0;\n                weatherVideoSecond.play();\n                setTimeout(()=>{\n                    weatherVideoFirst.pause();\n                    weatherVideoFirst.currentTime = 0;\n                }, 1000);\n                videoFirstPlay = true;\n            }\n        }\n        videoIntervalPlay();\n        setInterval(videoIntervalPlay, 20000);\n    };\n}\n/*swiper js*/ function myPlugin({ swiper, extendParams, on }) {\n    extendParams({\n        debugger: false\n    });\n    on(\"init\", ()=>{\n        if (!swiper.params.debugger) return;\n        console.log(\"init\");\n    });\n    on(\"click\", (swiper, e)=>{\n        if (!swiper.params.debugger) return;\n        console.log(\"click\");\n    });\n    on(\"tap\", (swiper, e)=>{\n        if (!swiper.params.debugger) return;\n        console.log(\"tap\");\n    });\n    on(\"doubleTap\", (swiper, e)=>{\n        if (!swiper.params.debugger) return;\n        console.log(\"doubleTap\");\n    });\n    on(\"sliderMove\", (swiper, e)=>{\n        if (!swiper.params.debugger) return;\n        console.log(\"sliderMove\");\n    });\n    on(\"slideChange\", ()=>{\n        if (!swiper.params.debugger) return;\n        console.log(\"slideChange\", swiper.previousIndex, \"->\", swiper.activeIndex);\n    });\n    on(\"slideChangeTransitionStart\", ()=>{\n        if (!swiper.params.debugger) return;\n        console.log(\"slideChangeTransitionStart\");\n    });\n    on(\"slideChangeTransitionEnd\", ()=>{\n        if (!swiper.params.debugger) return;\n        console.log(\"slideChangeTransitionEnd\");\n    });\n    on(\"transitionStart\", ()=>{\n        if (!swiper.params.debugger) return;\n        console.log(\"transitionStart\");\n    });\n    on(\"transitionEnd\", ()=>{\n        if (!swiper.params.debugger) return;\n        console.log(\"transitionEnd\");\n    });\n    on(\"fromEdge\", ()=>{\n        if (!swiper.params.debugger) return;\n        console.log(\"fromEdge\");\n    });\n    on(\"reachBeginning\", ()=>{\n        if (!swiper.params.debugger) return;\n        console.log(\"reachBeginning\");\n    });\n    on(\"reachEnd\", ()=>{\n        if (!swiper.params.debugger) return;\n        console.log(\"reachEnd\");\n    });\n}\nfunction windowSizeSwiper() {\n    let windowSize = window.innerWidth;\n    if (windowSize <= 769) {\n        let swiper = new Swiper(\".mySwiper\", {\n            slidesPerView: 3,\n            centeredSlides: true,\n            spaceBetween: 20,\n            grabCursor: true,\n            navigation: {\n                nextEl: \".swiper-button-next\",\n                prevEl: \".swiper-button-prev\"\n            },\n            // Enable debugger\n            debugger: true,\n            pagination: {\n                el: \".swiper-pagination\",\n                type: \"progressbar\"\n            }\n        });\n    } else {\n        let swiper = new Swiper(\".mySwiper\", {\n            slidesPerView: 4,\n            centeredSlides: true,\n            spaceBetween: 20,\n            grabCursor: true,\n            navigation: {\n                nextEl: \".swiper-button-next\",\n                prevEl: \".swiper-button-prev\"\n            },\n            // Enable debugger\n            debugger: true,\n            pagination: {\n                el: \".swiper-pagination\",\n                type: \"progressbar\"\n            }\n        });\n    }\n}\nwindowSizeSwiper();\n/*intersectionObserver animation*/ /*각 요소가 화면에 등장할 때 적용할 애니메이션을 작성한다.*/ let observer = new IntersectionObserver((entries)=>{\n    entries.forEach((entry)=>{\n        if (entry.isIntersecting) entry.target.classList.add(\"back-origin\");\n    });\n}, {\n    threshold: 0.5\n});\nconst toTopEls = document.querySelectorAll(\".to-top\");\ntoTopEls.forEach((toTopEl)=>observer.observe(toTopEl));\nconst toLeftEls = document.querySelectorAll(\".to-left\");\ntoLeftEls.forEach((toLeftEl)=>observer.observe(toLeftEl));\nconst toRightEls = document.querySelectorAll(\".to-right\");\ntoRightEls.forEach((toRightEl)=>observer.observe(toRightEl));\nconst toChargeEls = document.querySelectorAll(\".to-charge\");\ntoChargeEls.forEach((toChargeEl)=>observer.observe(toChargeEl));\nconst opacityChanges = document.querySelectorAll(\".opacityChange\");\nopacityChanges.forEach((opacityChange)=>observer.observe(opacityChange));\n\n//# sourceMappingURL=index.e2e15a9e.js.map\n","\r\n\r\n/*Cover Bg 사이즈 구하기*/\r\n/*background-size:cover로 되어있을 때의 이미지 사이즈를 구한다.*/\r\nfunction coverBgSize(el) {\r\n\r\n  //html 요소 사이즈를 가져온다.\r\n  // console.log(el);\r\n  const elWidth = el.offsetWidth;\r\n  const elHeight = el.offsetHeight;\r\n  // console.log(elWidth);\r\n\r\n  //해당 요소에 포함 된 background img url값만 가져온다\r\n  const elBgImg = getComputedStyle(el).getPropertyValue(\"background-image\").replace('url(\"', '').replace('\")', '');\r\n  // console.log(elBgImg);\r\n\r\n  //img url의 실제 사이즈를 가져온다.\r\n  const elBg = new Image();\r\n  elBg.src = elBgImg;\r\n  const elBgWidth = elBg.width;\r\n  const elBgHeight = elBg.height;\r\n\r\n  ///컨테이너와 이미지 사이즈를 이용해 기준을 설정\r\n\r\n  let stand = elWidth / elBgWidth;\r\n\r\n  if(elWidth/elBgWidth > elHeight/elBgHeight) { \r\n    stand = elWidth / elBgWidth;\r\n  }else{\r\n    stand = elHeight / elBgHeight;\r\n  }\r\n\r\n  let nowWidth = elBgWidth * stand;\r\n  let nowHeight = elBgHeight * stand;\r\n\r\n  return { 'nowWidth': nowWidth, 'nowHeight': nowHeight }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*호주 즐길거리 hover 애니메이션*/\r\n//창 사이즈 변경될때마다 실행\r\nwindow.addEventListener('resize',function(){\r\n  hoverAnimation(recommendThings);\r\n  hoverAnimation(naturalThings);\r\n  hoverAnimation(cityThings);\r\n  hoverAnimation(foodTypes);\r\n});\r\n\r\nconst recommendThings = document.querySelectorAll('.swiper-slide');\r\nconst naturalThings = document.querySelectorAll('.natural__box--picture');\r\nconst cityThings = document.querySelectorAll('.city__box');\r\nconst foodTypes = document.querySelectorAll('.food__type');\r\n\r\n//실행되면 바로 실행\r\nwindow.onload = function(){\r\nhoverAnimation(recommendThings);\r\nhoverAnimation(naturalThings);\r\nhoverAnimation(cityThings);\r\nhoverAnimation(foodTypes);\r\n}\r\n\r\nfunction hoverAnimation(els){\r\n  els.forEach((el)=>{\r\n  let size = coverBgSize(el);\r\n  let size_width = size['nowWidth'];\r\n  let size_height = size['nowHeight'];\r\n  el.style.backgroundSize = `${size_width}px ${size_height}px`;\r\n\r\n  el.addEventListener('mouseover',function(){\r\n    el.style.backgroundSize = `${size_width*1.05}px ${size_height*1.05}px`;\r\n  });\r\n  el.addEventListener('mouseleave',function(){\r\n    el.style.backgroundSize = `${size_width}px ${size_height}px`;\r\n  });\r\n});\r\n}\r\n\r\n\r\n/*food*/\r\n/*음식 미리보기 사진을 클릭하면 음식 설명이 바뀐다*/\r\n/*현재 보여지고 있는 사진을 표시해준다.*/\r\nfunction foodImgChange(){ //음식 설명 변경\r\n  const foodTypes = document.querySelectorAll('.food__type');\r\n  const foodContents = document.querySelectorAll('.food__content');\r\n\r\n  foodTypes.forEach(function(foodType, index){\r\n    if(index===0){\r\n      foodType.classList.add('active');\r\n    }\r\n    foodType.addEventListener('click',function(event){\r\n      foodTypes.forEach((foodType) =>{foodType.classList.remove('active');});\r\n      event.target.classList.add('active');\r\n      foodContents.forEach((foodContent)=>{foodContent.classList.remove('active');});\r\n      foodContents[index].classList.add('active');\r\n    });\r\n  });\r\n}\r\nfoodImgChange();\r\n\r\n\r\n/*district*/\r\n/*지도를 클릭하면 그 주의 정보를 불러온다.*/\r\nconst districtMap = document.querySelectorAll('.district__map--js');\r\nconst districtInfo = document.querySelectorAll('.district__info--js');\r\nconst districtInfoContent = [\r\n  ['태즈메이니아', 'Tasmania', '호바트', '2,296,411명', '90,758 km²', '\tUTC+10 / 서머타임 시행'],\r\n  ['웨스턴 오스트레일리아', 'Western Australia', '퍼스', '2,296,411명', '2,645,615km²', 'UTC +8 / UTC+8:45'],\r\n  ['사우스 오스트레일리아', 'South Australia', '애들레이드', '1,514,337명', '1,043,514 km²', 'UTC+9:30 / 서머타임 시행'],\r\n  ['퀸즐랜드', 'Queensland', '브리즈번', '4,907,600명', '1,852,642 km²', 'UTC+10'],\r\n  ['빅토리아', 'Victoria', '멜버른', '5,713,000명', '237,629 km²', 'UTC+10 / 서머타임 시행'],\r\n  ['뉴사우스웨일스', 'New South Wales', '시드니', '6,889,100 명', '809,444 km²', 'UTC+10 / 서머타임 시행'],\r\n];\r\n\r\ndistrictMap.forEach((district, index)=>{\r\n  district.addEventListener('click',(event)=>{\r\n    districtMap.forEach((district)=>{\r\n      district.classList.remove('active');\r\n    });\r\n    event.target.classList.add('active');\r\n\r\n    console.log(districtInfoContent[index]);\r\n    for(key in districtInfoContent[index]){\r\n      districtInfo[key].innerText = districtInfoContent[index][key];\r\n    }\r\n  });\r\n});\r\n\r\n\r\n\r\n/*weatehr__bg*/\r\n/*비디오가 끝나도 자연스럽게 fadein으로 연결시킨다.*/\r\n/*추가 확인 필요!*/\r\n\r\nlet weatherVideoFirst = document.getElementById('weather__bg--js--first');\r\nlet weatherVideoSecond = document.getElementById('weather__bg--js--second');\r\n\r\nvideoLoad();\r\nfunction videoLoad() {\r\n  weatherVideoFirst.onloadedmetadata = function () {\r\n    // weatherVideoSecond.pause();\r\n    let videoFirstPlay = true;\r\n\r\n    function videoIntervalPlay() {\r\n      if (videoFirstPlay) {\r\n        weatherVideoFirst.style.opacity = 1;\r\n        weatherVideoFirst.play();\r\n        setTimeout(()=>{\r\n          weatherVideoSecond.pause(); \r\n          weatherVideoSecond.currentTime=0;},1000)\r\n        videoFirstPlay = false;\r\n      } else {\r\n        weatherVideoFirst.style.opacity = 0;\r\n        weatherVideoSecond.play();\r\n        setTimeout(()=>{\r\n          weatherVideoFirst.pause(); \r\n          weatherVideoFirst.currentTime=0;},1000);\r\n        videoFirstPlay = true;\r\n      }\r\n    }\r\n    videoIntervalPlay();\r\n    setInterval(videoIntervalPlay, 20000);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n/*swiper js*/\r\nfunction myPlugin({ swiper, extendParams, on }) {\r\n  extendParams({\r\n    debugger: false,\r\n  });\r\n\r\n  on('init', () => {\r\n    if (!swiper.params.debugger) return;\r\n    console.log('init');\r\n  });\r\n  on('click', (swiper, e) => {\r\n    if (!swiper.params.debugger) return;\r\n    console.log('click');\r\n  });\r\n  on('tap', (swiper, e) => {\r\n    if (!swiper.params.debugger) return;\r\n    console.log('tap');\r\n  });\r\n  on('doubleTap', (swiper, e) => {\r\n    if (!swiper.params.debugger) return;\r\n    console.log('doubleTap');\r\n  });\r\n  on('sliderMove', (swiper, e) => {\r\n    if (!swiper.params.debugger) return;\r\n    console.log('sliderMove');\r\n  });\r\n  on('slideChange', () => {\r\n    if (!swiper.params.debugger) return;\r\n    console.log(\r\n      'slideChange',\r\n      swiper.previousIndex,\r\n      '->',\r\n      swiper.activeIndex\r\n    );\r\n  });\r\n  on('slideChangeTransitionStart', () => {\r\n    if (!swiper.params.debugger) return;\r\n    console.log('slideChangeTransitionStart');\r\n  });\r\n  on('slideChangeTransitionEnd', () => {\r\n    if (!swiper.params.debugger) return;\r\n    console.log('slideChangeTransitionEnd');\r\n  });\r\n  on('transitionStart', () => {\r\n    if (!swiper.params.debugger) return;\r\n    console.log('transitionStart');\r\n  });\r\n  on('transitionEnd', () => {\r\n    if (!swiper.params.debugger) return;\r\n    console.log('transitionEnd');\r\n  });\r\n  on('fromEdge', () => {\r\n    if (!swiper.params.debugger) return;\r\n    console.log('fromEdge');\r\n  });\r\n  on('reachBeginning', () => {\r\n    if (!swiper.params.debugger) return;\r\n    console.log('reachBeginning');\r\n  });\r\n  on('reachEnd', () => {\r\n    if (!swiper.params.debugger) return;\r\n    console.log('reachEnd');\r\n  });\r\n}\r\n\r\nfunction windowSizeSwiper() {\r\n  let windowSize = window.innerWidth;\r\n  if (windowSize <= 769) {\r\n    let swiper = new Swiper(\".mySwiper\", {\r\n      slidesPerView: 3,\r\n      centeredSlides: true,\r\n      spaceBetween: 20,\r\n      grabCursor: true,\r\n      navigation: {\r\n        nextEl: '.swiper-button-next',\r\n        prevEl: '.swiper-button-prev',\r\n      },\r\n      // Enable debugger\r\n      debugger: true,\r\n      pagination: {\r\n        el: \".swiper-pagination\",\r\n        type: \"progressbar\"\r\n      }\r\n    });\r\n  } else {\r\n    let swiper = new Swiper(\".mySwiper\", {\r\n      slidesPerView: 4,\r\n      centeredSlides: true,\r\n      spaceBetween: 20,\r\n      grabCursor: true,\r\n      navigation: {\r\n        nextEl: '.swiper-button-next',\r\n        prevEl: '.swiper-button-prev',\r\n      },\r\n      // Enable debugger\r\n      debugger: true,\r\n      pagination: {\r\n        el: \".swiper-pagination\",\r\n        type: \"progressbar\"\r\n      }\r\n    });\r\n  }\r\n}\r\nwindowSizeSwiper();\r\n\r\n/*intersectionObserver animation*/\r\n/*각 요소가 화면에 등장할 때 적용할 애니메이션을 작성한다.*/\r\nlet observer = new IntersectionObserver((entries) => {\r\n  entries.forEach(entry => {\r\n    if (entry.isIntersecting) {\r\n      entry.target.classList.add('back-origin');\r\n    }\r\n  });\r\n  }, {threshold: 0.5});\r\n  \r\n  const toTopEls = document.querySelectorAll('.to-top');\r\n  toTopEls.forEach(toTopEl => observer.observe(toTopEl));\r\n\r\n  const toLeftEls = document.querySelectorAll('.to-left');\r\n  toLeftEls.forEach(toLeftEl => observer.observe(toLeftEl));  \r\n\r\n  const toRightEls = document.querySelectorAll('.to-right');\r\n  toRightEls.forEach(toRightEl => observer.observe(toRightEl));\r\n\r\n  const toChargeEls = document.querySelectorAll('.to-charge');\r\n  toChargeEls.forEach(toChargeEl => observer.observe(toChargeEl));\r\n\r\n  const opacityChanges = document.querySelectorAll('.opacityChange');\r\n  opacityChanges.forEach(opacityChange => observer.observe(opacityChange));\r\n"],"names":["window","addEventListener","hoverAnimation","recommendThings","naturalThings","cityThings","foodTypes","document","querySelectorAll","els","forEach","el","size","coverBgSize","elWidth","offsetWidth","elHeight","offsetHeight","elBgImg","getComputedStyle","getPropertyValue","replace","elBg","Image","src","elBgWidth","width","elBgHeight","height","stand","size_width","size_height","style","backgroundSize","onload","foodImgChange","foodContents","foodType","index","classList","add","event","remove","target","foodContent","districtMap","districtInfo","districtInfoContent","district","key","console","log","innerText","weatherVideoFirst","getElementById","weatherVideoSecond","onloadedmetadata","videoFirstPlay","videoIntervalPlay","opacity","play","setTimeout","pause","currentTime","setInterval","windowSize","innerWidth","Swiper","slidesPerView","centeredSlides","spaceBetween","grabCursor","navigation","nextEl","prevEl","debugger","pagination","type","observer","IntersectionObserver","entries","entry","isIntersecting","threshold","toTopEls","toTopEl","observe","toLeftEls","toLeftEl","toRightEls","toRightEl","toChargeEls","toChargeEl","opacityChanges","opacityChange"],"version":3,"file":"index.e2e15a9e.js.map"}